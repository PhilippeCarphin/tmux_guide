
* TMUX guide

** Intro

Here is a demo [[https://youtu.be/gmjyMxezIWU?t=187]] by some guy, start it while you read this.

TMUX is a command line program.  You open up a shell somewhere, perhaps you then
ssh into another machine, and then you start =tmux=.

This stars a tmux session. When Tmux creates new shells (as in the video), these
shells are on the machine where you started your tmux session.  What a life changer!

You can also detach from a tmux session and reconnect to it later.  If you have
all your shells setup in your perfect way, you can just detatch.  Then when you
log back into work tomorrow, you can reattach to that session with your shells
alive and well as if you had never left^*.  Or if your connection fails, you may
just be able to log back in and reattach to your session.

(*) Some machines have a cap on CPU time or wallclock time for some processes so YMMV depending on the machine.

** Spawning new shells

Bash will source different files at startup based on presence of one of
- =~/.profile=
- =~/.bashrc=
- =~/.bash_profile=
- =~/.bash_login=
and whether it was invoked as a /login shell/.  This feature was created to
permit different files being sourced depending on whether bash is ivoked through an ssh connection.

These days, the feature mostly serves to confuse people.

Anyway, in your =.tmux.conf=, you can set a the command to run when creating new
shells.  This is where you tell tmux to start new shells as login shells.

This is the =default-command= setting and this is what you can put in your
=.tmux.conf=:

#+BEGIN_SRC tmux.conf
set -g default-command "/bin/bash -l"
#+END_SRC

or something like this:
#+BEGIN_SRC tmux.conf
set -g default-command "env -i LOGNAME=$LOGNAME USER=$USER HOME=$HOME TERM=$TERM DISPLAY=$DISPLAY LANG=$LANG /bin/bash -l"
#+END_SRC

This setting is equivalent to putting something a Konsole profile.

** The defaults suck, use community defaults

These should really go in your tmux.conf

#+BEGIN_SRC tmux.conf
set -g prefix C-a
bind C-a send-keys C-a

set -g default-terminal "screen-256color"
bind c   new-window
bind /   split-window -h
bind '-' split-window -v
#+END_SRC

Unlike taking somebody's =vimrc=, these are widespread community defaults that
are shown in the first chapters of books on TMUX as the first thing you should
do.

It is quite common for Linux users to remap their CapsLock key to function as a
CTRL key which is why TMUX users set CTRL-A as their prefix.

To be more general, I will write =prefix C-j= to mean =C-a C-j=.

#+BEGIN_SRC tmux.conf
bind k selectp -U # switch to panel Up
bind j selectp -D # switch to panel Down 
bind h selectp -L # switch to panel Left
bind l selectp -R # switch to panel Right

# resize panes like vim
bind -r C-h resize-pane -L 4 
bind -r C-l resize-pane -R 4 
bind -r C-j resize-pane -D 4 
bind -r C-k resize-pane -U 4
#+END_SRC

Note: When resizing, you can do =prefix C-j C-j C-j ...= to resize multiple times
as long as you go fast enough.

** Scrolling

To scroll in a pane, activate scrolling mode using =prefix [=.  You can use Vim
keybindings to move your cursor.

Please trust me on this: TMUX scrolling is better than scrolling your shell with
the mouse wheel once you are used to it and if you use these tips:

Use =C-u= and =C-d= instead of just doing =prefix [= and using the mouse wheel
and use =j,k= to move up and down single lines.

It's so fast!  You write a command, hit =enter=, then =prefix [ C-u C-u C-u=.

** Maximize panes

Use =prefix z= to maximize the current pane.

** Selecting text, copying and pasting

If you have multiple panes, a mouse selection may span across panes.  Maximize
the current pane to avoid this.

If you are copying and pasting between two things in the same tmux session,
consider using TMUX's copying and pasting features.

When in =prefix [= mode use vim style selection commands, when you like your
selection, hit =enter=.  You are now out of scrolling mode.

At this point, doing =prefix ]= will paste what was copied into the current pane.
** More info

I have this book, it's very good

 https://www.amazon.ca/dp/1680502212/ref=cm_sw_em_r_mt_dp_U_pBRCEbJS1NMYP

** =oh-my-tmux=

Oh My Tmux is a popular tmux config https://github.com/gpakosz/.tmux and it is
what I currently use.  All you have to do is grab his =.tmux.conf= and
=.tmux.conf.local= and put them in you =$HOME=.  You can then put your own stuff
at the end of =.tmux.conf.local=

I have the stuff from the proposed =.tmux.conf= at the end of my own
=.tmux.conf.local= (which can be found at
https://github.com/philippecarphin/configurations/blob/master/tmux_home/)
